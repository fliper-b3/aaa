---
- hosts: all
  # become_user: "{{ user_name }}"
  become: yes
  vars:
    repo_list:  "{{ lookup('file', '.backup/aur.url.txt').split() }}"
    soft_list:  "{{ lookup('file', '.backup/pacman.installed.txt').split() }}"
    build_dir:  "{{ playbook_dir }}/.build"
    backup_dir: "{{ playbook_dir }}/.backup"
  tasks:
    - name: git clone aur soft
      git:
        repo: "{{ item }}" 
        dest: "{{ build_dir }}/{{ folder_name | trim  }}"
        force: yes
      vars:
        folder_name: "{{ item | urlsplit('path') | basename | regex_replace('(.*)\\.git$', '\\1') }} "
      loop: "{{ repo_list }}"

    - name: Setup softs list
      package:
        state: present
        name: "{{ item }}"
      loop: "{{ soft_list }}"
      ignore_errors: yes

    - name: Install aur soft
      become_user: "{{ user_name }}"
      command:
        chdir: "{{ build_dir }}/{{ folder_name | trim }}"
        cmd: /usr/bin/makepkg --install --noconfirm --force --clean --syncdeps
      vars:
        folder_name: "{{ item | urlsplit('path') | basename | regex_replace('(.*)\\.git$', '\\1') }} "
      loop: "{{ repo_list }}"
    
    - name: download oh-my-zsh install.sh script
      become_user: "{{ user_name }}"
      command:
        cmd: 'sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"'

    - name: Dance with zsh, install theme https://typewritten.dev
      git:
        repo: https://github.com/reobin/typewritten.git
        dest: "{{ lookup('env', 'HOME') }}/.oh-my-zsh/themes/typewritten/"
        force: yes

    - name: Dance with zsh, install zsh-autosuggestions plugin
      git:
        repo: https://github.com/zsh-users/zsh-autosuggestions 
        dest: "{{ lookup('env', 'HOME') }}/.oh-my-zsh/zsh-autosuggestions"
        force: yes

    - name: Dance with zsh, restory my .zshrc file
      template:
        owner: "{{ user_name }}"
        group: "{{ user_name }}"
        src: "{{ backup_dir }}/.zshrc"
        dest: "{{ lookup('env', 'HOME') }}/.zshrc"

    - name: Restory dconf backup
      become_user: "{{ user_name }}"
      shell: "/usr/bin/dbus-launch /usr/bin/dconf load -f / < {{ backup_dir }}/gnome.backup.dconf"
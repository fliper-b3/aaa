---
- hosts: all
  become: yes
  become_user: "{{ user_name }}"
  vars:
    build_dir:  "{{ lookup('env', 'HOME') }}/.build"
    backup_dir: "{{ playbook_dir }}/.backup"
    repo_list:  "{{ lookup('file', lookup('vars', 'backup_dir')+'/aur.git.url.txt').split() }}"
    soft_list:  "{{ lookup('file', lookup('vars', 'backup_dir')+'/pacman.installed.txt').split() }}"
    vscode_ext: "{{ lookup('file', lookup('vars', 'backup_dir')+'/vsc-ext.txt').split() }}"
    zsh_list:   "{{ lookup('file', lookup('vars', 'backup_dir')+'/zsh.customplugins.url.txt') | from_yaml }}"

  tasks:
    - name: git clone aur soft
      git:
        repo: "{{ item }}" 
        dest: "{{ build_dir }}/{{ folder_name | trim  }}"
        force: yes
      vars:
        folder_name: "{{ item | urlsplit('path') | basename | regex_replace('(.*)\\.git$', '\\1') }} "
      loop: "{{ repo_list }}"

    - name: Setup softs list
      become_user: root
      package:
        state: present
        name: "{{ item }}"
      loop: "{{ soft_list }}"
      ignore_errors: yes

    - name: Install aur soft
      command:
        chdir: "{{ build_dir }}/{{ folder_name | trim }}"
        cmd: /usr/bin/makepkg --install --noconfirm --force --clean --syncdeps
      vars:
        folder_name: "{{ item | urlsplit('path') | basename | regex_replace('(.*)\\.git$', '\\1') }} "
      loop: "{{ repo_list }}"

    - name: Install oh-my-zsh
      git:
        repo: https://github.com/ohmyzsh/ohmyzsh.git
        dest: "{{ lookup('env', 'HOME') }}/.oh-my-zsh/"
        clone: no

    - name: Install theme https://typewritten.dev
      git:
        repo: https://github.com/reobin/typewritten.git
        dest: "{{ lookup('env', 'HOME') }}/.oh-my-zsh/themes/typewritten/"
        force: yes

    - name: Install oh-my-zsh plugin zsh-autosuggestions
      git:
        repo: https://github.com/zsh-users/zsh-autosuggestions 
        dest: "{{ lookup('env', 'HOME') }}/.oh-my-zsh/zsh-autosuggestions"
        force: yes

    - name: Install vscode extenstions
      command:
        cmd: "/usr/bin/code --install-extension {{ item }}"
      loop: "{{ vscode_ext }}"
    
    - name: Restory my .zshrc file
      template:
        owner: "{{ user_name }}"
        group: "{{ user_name }}"
        src: "{{ backup_dir }}/.zshrc"
        dest: "{{ lookup('env', 'HOME') }}/.zshrc"

    - name: oh-my-zsh install custom plugins
      git:
        repo: "{{ item.url }}" 
        dest: "{{ lookup('env', 'HOME') }}/{{ folder_name }}/{{ item.name }}"
      vars:
        folder_name: ".oh-my-zsh/custom/plugins"
      loop: "{{ zsh_list }}"

    - name: Setup zsh for user
      replace:
        path: /etc/passwd
        regexp: "^{{ user_name }}:(x:\\d+:\\d+:):/home/{{ user_name }}:(.*)$"
        replace: "{{ user_name }}:\\1:/home/{{ user_name }}:\\2"

    - name: Restory dconf backup
      shell: "/usr/bin/dbus-launch /usr/bin/dconf load -f / < {{ backup_dir }}/gnome.backup.dconf"

    - name: setup cron jobs
      cron:
        user: "{{ user_name }}"
        name: "{{ item.name }}"
        special_time: daily
        job: "{{ item.path }}"
      loop:
        - { name: "backup zsh",                path: "/usr/bin/cp ${HOME}/.zshrc {{ playbook_dir }}/.backup/.zshrc" }
        - { name: "backup aur soft",           path: "{{ playbook_dir }}/scripts/aur.backup.sh" }
        - { name: "backup autostart dir",      path: "{{ playbook_dir }}/scripts/autostart.sh" }
        - { name: "backup vscode plugins",     path: "{{ playbook_dir }}/scripts/code.plubins.backup.sh" }
        - { name: "backup zsh custom plugins", path: "{{ playbook_dir }}/scripts/zsh.customplugins.backup.sh" }
        - { name: "backup installed packages", path: "{{ playbook_dir }}/scripts/pacman.backup.sh" }
    
    - name: copy autostart dir
      copy:
        src: "{{ playbook_dir }}/.backup/autostart/"
        dest: "{{ lookup('env', 'HOME') }}/.config/autostart/"
        owner: "{{ user_name }}"
        group: "{{ user_name }}"


    - name: Enable services
      become_user: root
      service:
        name: sddm
        enabled: yes